@model RWAMovies.ViewModels.VMVideo

@{
    ViewData["Title"] = "Edit";
    var genres = new List<VMGenre>();
    var videoGenre = new List<VMVideoGenre>();
    var tags = new List<VMTag>();
    var videoTag = new List<VMVideoTag>();


}

<h1>Edit</h1>

<h4>Video</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UrlImage" class="control-label"></label>
                <input asp-for="UrlImage" class="form-control" />
                <span asp-validation-for="UrlImage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <img class="img-thumbnail img-fluid w-50 w-50" src="@Model.UrlImage">
            </div>
            <div class="form-group">
                <label asp-for="TotalTime" class="control-label"></label>
                <input asp-for="TotalTime" class="form-control" />
                <span asp-validation-for="TotalTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StreamingUrl" class="control-label"></label>
                <input asp-for="StreamingUrl" class="form-control" />
                <span asp-validation-for="StreamingUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="VideoGenres" class="control-label"></label>
                <select id="loadedGenre" class="form-control" asp-items="@(SelectList)ViewBag.Genres">
                    <option value="">Choose genres</option>
                </select>
                <br />
                <div id="SelectedGenres"></div>
                <button type="button" class="btn btn-danger" id="deleteAllGenres">Delete all</button>
            </div>
            <br />

            @*
            <br />
            <div class="form-group">
            @Html.DropDownList("Genre", (SelectList)ViewBag.Genres,"Choose the genre", new { @class = "genres",id = "loadedGenre"})
            <br />
            <div id="SelectedGenres"></div>
            <button type="button" id="deleteAllGenres">Delete all</button>
            </div>
            <br />
            <div class="form-group">
            @Html.DropDownList("Tag", (SelectList)ViewBag.Tags,"Choose the tag", new { @class = "tags",id = "loadedTags"})
            <br />
            <div id="SelectedTags"></div>
            <button type="button" id="deleteAllTags">Delete all</button>
            </div>
            <br />
            *@
            <div class="form-group">
                <label asp-for="VideoTags" class="control-label"></label>
                <select id="loadedTags" class="form-control" asp-items="@(SelectList)ViewBag.Tags">
                    <option value="">Choose tags</option>
                </select>
                <br />
                <div id="SelectedTags"></div>
                <button type="button" class="btn btn-danger" id="deleteAllTags">Delete all</button>
            </div>
            <br />
            <div class="form-group">
                <input type="hidden" id="hiddenGenres" name="hiddenGenres" />
                <input type="hidden" id="hiddenTags" name="hiddenTags" />
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@{
    foreach (var genre in genres)
    {
        var videoGenreItem = new VMVideoGenre
                {
                    GenreId = genre.Idgenre,
                    VideoId = Model.IDVideo,
                };
        videoGenre.Add(videoGenreItem);
    }
    // Model.VideoGenres = videoGenre;

    foreach (var tag in tags)
    {
        var videoTagItem = new VMVideoTag
                {
                    TagId = tag.Idtag,
                    VideoId = Model.IDVideo,
                };
        videoTag.Add(videoTagItem);
    }
    //Model.VideoGenres = videoGenre;
}

@section Scripts {

    <script src="~/js/SelectItems.js"></script>
    <script>
        var genreDisplayId = document.getElementById('SelectedGenres');
        var tagDisplayId = document.getElementById('SelectedTags');

        saveSelectedGenres(genreDisplayId);
        saveSelectedTags(tagDisplayId);
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
